import sys

def Hanoi(n, a, b) :
    if n > 1 :
        Hanoi(n - 1, a, 6 - a - b)

    print(a, b)

    if n > 1 :
        Hanoi(n - 1, 6 - a - b, b)

n = int(sys.stdin.readline())

print(2**n - 1)

if n <= 20 :
    Hanoi(n, 1, 3)

# 원판 개수에 따른 이동횟수를 정리해보먄
# 1개 -> 1번
# 2개 -> 3번
# 3개 -> 7번
# 4개 -> 15번
# 5개 -> 31번
# 이를 통해 원판 개수에 따른 전체 이동횟수 식은 2의 n-1승 + 1이다.

# 원판을 모두 1번 기둥에서 3번 기둥으로 옮기는 과정
# 1단계 : n - 1개의 원판을 1번 기둥에서 2번 기둥으로 옮긴다.
#        -> 2번 기둥의 번호를 구하는 방법
#           1, 2, 3번 기둥을 각각 1, 2, 3으로 설정하고, 다 합치면 6이 된다.
#           따라서 2번 막대로 옮기는 식은 6 - 1번 기둥 - 3번 기둥이다.
# 2단계 : n번째 원판(즉, 제일 큰 원판)을 1번 기둥에서 3번 기둥으로 옮긴다.
# 3단계 : n - 1개의 원판을 2번 기둥에서 3번 기둥으로 옮긴다.

# 참고 사이트 : https://study-all-night.tistory.com/6